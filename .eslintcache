[{"/home/vndrkl/nodeProjects/petra/src/views/Home.tsx":"1","/home/vndrkl/nodeProjects/petra/src/components/TaskCreateForm.tsx":"2","/home/vndrkl/nodeProjects/petra/src/components/SharedStyles.tsx":"3","/home/vndrkl/nodeProjects/petra/src/components/TaskPreviewForm.tsx":"4","/home/vndrkl/nodeProjects/petra/src/components/Button.tsx":"5","/home/vndrkl/nodeProjects/petra/src/index.tsx":"6","/home/vndrkl/nodeProjects/petra/src/contexts/task.context.tsx":"7","/home/vndrkl/nodeProjects/petra/src/App.tsx":"8","/home/vndrkl/nodeProjects/petra/src/reducers/task.reducer.ts":"9","/home/vndrkl/nodeProjects/petra/src/components/Cell.tsx":"10","/home/vndrkl/nodeProjects/petra/src/hooks/useCalendar.ts":"11","/home/vndrkl/nodeProjects/petra/src/components/CalendarHeader.tsx":"12","/home/vndrkl/nodeProjects/petra/src/components/TaskEditForm.tsx":"13","/home/vndrkl/nodeProjects/petra/src/reportWebVitals.ts":"14","/home/vndrkl/nodeProjects/petra/src/components/Control.tsx":"15","/home/vndrkl/nodeProjects/petra/src/components/Switch.tsx":"16","/home/vndrkl/nodeProjects/petra/src/utils/index.ts":"17","/home/vndrkl/nodeProjects/petra/src/components/YearView.tsx":"18"},{"size":5897,"mtime":1610845280205,"results":"19","hashOfConfig":"20"},{"size":4385,"mtime":1610825987829,"results":"21","hashOfConfig":"20"},{"size":2742,"mtime":1610841925433,"results":"22","hashOfConfig":"20"},{"size":3376,"mtime":1610827486820,"results":"23","hashOfConfig":"20"},{"size":1368,"mtime":1610827677112,"results":"24","hashOfConfig":"20"},{"size":500,"mtime":1610544535835,"results":"25","hashOfConfig":"20"},{"size":828,"mtime":1610589240924,"results":"26","hashOfConfig":"20"},{"size":270,"mtime":1610589220463,"results":"27","hashOfConfig":"20"},{"size":1979,"mtime":1610826758665,"results":"28","hashOfConfig":"20"},{"size":2971,"mtime":1610839010926,"results":"29","hashOfConfig":"20"},{"size":1881,"mtime":1610845867320,"results":"30","hashOfConfig":"20"},{"size":867,"mtime":1610843730690,"results":"31","hashOfConfig":"20"},{"size":4088,"mtime":1610826141154,"results":"32","hashOfConfig":"20"},{"size":425,"mtime":1610544535835,"results":"33","hashOfConfig":"20"},{"size":2979,"mtime":1610840923950,"results":"34","hashOfConfig":"20"},{"size":911,"mtime":1610841790144,"results":"35","hashOfConfig":"20"},{"size":85,"mtime":1610547752588,"results":"36","hashOfConfig":"20"},{"size":3971,"mtime":1610846251731,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wyyoac",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/vndrkl/nodeProjects/petra/src/views/Home.tsx",[],"/home/vndrkl/nodeProjects/petra/src/components/TaskCreateForm.tsx",[],["79","80"],"/home/vndrkl/nodeProjects/petra/src/components/SharedStyles.tsx",[],"/home/vndrkl/nodeProjects/petra/src/components/TaskPreviewForm.tsx",[],"/home/vndrkl/nodeProjects/petra/src/components/Button.tsx",[],"/home/vndrkl/nodeProjects/petra/src/index.tsx",[],["81","82"],"/home/vndrkl/nodeProjects/petra/src/contexts/task.context.tsx",[],["83","84"],"/home/vndrkl/nodeProjects/petra/src/App.tsx",[],["85","86"],"/home/vndrkl/nodeProjects/petra/src/reducers/task.reducer.ts",[],"/home/vndrkl/nodeProjects/petra/src/components/Cell.tsx",[],"/home/vndrkl/nodeProjects/petra/src/hooks/useCalendar.ts",["87"],"/home/vndrkl/nodeProjects/petra/src/components/CalendarHeader.tsx",[],"/home/vndrkl/nodeProjects/petra/src/components/TaskEditForm.tsx",["88","89"],"import React, { useState } from \"react\";\n\nimport { ITask, TaskEdit, TaskCreate } from \"../types\";\nimport Button from \"./Button\";\nimport moment from \"moment\";\n\nimport closeIcon from \"../assets/close.svg\";\nimport { ID } from \"../utils\";\n\nimport {\n  StyledContainer,\n  StyledModal,\n  StyledHeader,\n  StyledIcon,\n  StyledContent,\n  StyledForm,\n  StyledInputGroup,\n  StyledInput,\n  StyledLabel,\n  StyledTextArea,\n  StyledSelect,\n  StyledOption,\n  StyledFooter,\n} from \"./SharedStyles\";\n\ntype ChangeEventType =\n  | React.ChangeEvent<HTMLInputElement>\n  | React.ChangeEvent<HTMLSelectElement>\n  | React.ChangeEvent<HTMLTextAreaElement>;\n\ninterface FormProps {\n  task: ITask;\n  onSave: (task: ITask, type: \"SAVE\" | \"EDIT\") => void;\n  onClose: () => void;\n  width: number;\n}\n\nexport const TaskEditForm: React.FC<FormProps> = ({\n  onSave,\n  width,\n  onClose,\n  task,\n}) => {\n  const handleOnSave = () => {\n    const updatedTask = {\n      ...input,\n      dueDate: moment(input.dueDate).format(\"YYYY-MM-DD\"),\n      id: task.id,\n    };\n    onSave(updatedTask, \"EDIT\");\n  };\n\n  const initialState = {\n    name: task.name,\n    description: task.description,\n    dueDate: task.dueDate,\n    status: task.status,\n    priority: task.priority,\n  } as TaskEdit;\n\n  const [input, setInput] = useState<TaskEdit>(initialState);\n\n  const handleInputChange = (event: ChangeEventType) => {\n    event.persist();\n    setInput((inputs) => ({\n      ...inputs,\n      [event.target.name]: event.target.value,\n    }));\n  };\n\n  return (\n    <>\n      <StyledContainer>\n        <StyledModal width={width}>\n          <StyledHeader>\n            <StyledIcon\n              alt=\"close icon\"\n              src={closeIcon}\n              onClick={onClose}\n              color=\"#fccdec\"\n            />\n          </StyledHeader>\n          <StyledContent>\n            <StyledForm>\n              <StyledInputGroup>\n                <StyledLabel>Name</StyledLabel>\n                <StyledInput\n                  autoFocus\n                  placeholder=\"enter task name\"\n                  name=\"name\"\n                  value={input.name}\n                  onChange={handleInputChange}\n                />\n              </StyledInputGroup>\n              <StyledInputGroup>\n                <StyledLabel>Description</StyledLabel>\n                <StyledTextArea\n                  placeholder=\"enter description\"\n                  name=\"description\"\n                  value={input.description}\n                  onChange={handleInputChange}\n                />\n              </StyledInputGroup>\n              <StyledInputGroup>\n                <StyledLabel>Status</StyledLabel>\n                <StyledSelect\n                  name=\"status\"\n                  value={input.status}\n                  onChange={handleInputChange}\n                >\n                  <StyledOption value=\"in-progress\">In Progress</StyledOption>\n                  <StyledOption value=\"completed\">Completed</StyledOption>\n                </StyledSelect>\n              </StyledInputGroup>\n              <StyledInputGroup>\n                <StyledLabel>Priority</StyledLabel>\n                <StyledSelect\n                  name=\"priority\"\n                  value={input.priority}\n                  onChange={handleInputChange}\n                >\n                  <StyledOption value=\"1\">High</StyledOption>\n                  <StyledOption value=\"2\">Medium</StyledOption>\n                  <StyledOption value=\"3\">Low</StyledOption>\n                </StyledSelect>\n              </StyledInputGroup>\n              <StyledInputGroup>\n                <StyledLabel>Due date </StyledLabel>\n                <StyledInput\n                  name=\"dueDate\"\n                  type=\"date\"\n                  value={input.dueDate}\n                  onChange={handleInputChange}\n                />\n              </StyledInputGroup>\n            </StyledForm>\n          </StyledContent>\n          <StyledFooter>\n            <Button text=\"Save\" onClick={handleOnSave} />\n          </StyledFooter>\n        </StyledModal>\n      </StyledContainer>\n    </>\n  );\n};\n\nexport default TaskEditForm;\n","/home/vndrkl/nodeProjects/petra/src/reportWebVitals.ts",[],"/home/vndrkl/nodeProjects/petra/src/components/Control.tsx",[],"/home/vndrkl/nodeProjects/petra/src/components/Switch.tsx",[],"/home/vndrkl/nodeProjects/petra/src/utils/index.ts",[],"/home/vndrkl/nodeProjects/petra/src/components/YearView.tsx",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"90","replacedBy":"94"},{"ruleId":"92","replacedBy":"95"},{"ruleId":"90","replacedBy":"96"},{"ruleId":"92","replacedBy":"97"},{"ruleId":"90","replacedBy":"98"},{"ruleId":"92","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":4,"column":1,"nodeType":"102","endLine":75,"endColumn":2},{"ruleId":"103","severity":1,"message":"104","line":3,"column":27,"nodeType":"105","messageId":"106","endLine":3,"endColumn":37},{"ruleId":"103","severity":1,"message":"107","line":8,"column":10,"nodeType":"105","messageId":"106","endLine":8,"endColumn":12},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],["108"],["109"],["108"],["109"],["108"],["109"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","@typescript-eslint/no-unused-vars","'TaskCreate' is defined but never used.","Identifier","unusedVar","'ID' is defined but never used.","no-global-assign","no-unsafe-negation"]